// <auto-generated />
using System;
using EcreoUserAPI.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EcreoUserAPI.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20220323101209_UsernamerForUsers")]
    partial class UsernamerForUsers
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.14")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EcreoLibraryStandard.AbsenceStatus", b =>
                {
                    b.Property<string>("BaseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AbsenceStatusRole")
                        .HasColumnType("int");

                    b.Property<DateTime>("FromeTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ToTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserBaseID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("BaseID");

                    b.HasIndex("UserBaseID");

                    b.ToTable("AbsenceStatuses");
                });

            modelBuilder.Entity("EcreoLibraryStandard.ContactInformation", b =>
                {
                    b.Property<string>("BaseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BaseID");

                    b.ToTable("ContactInformations");
                });

            modelBuilder.Entity("EcreoLibraryStandard.User", b =>
                {
                    b.Property<string>("BaseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("AdminStatus")
                        .HasColumnType("bit");

                    b.Property<int>("CurrentAbsenceStatus")
                        .HasColumnType("int");

                    b.Property<string>("Firstname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonalInformationBaseID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BaseID");

                    b.HasIndex("PersonalInformationBaseID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EcreoLibraryStandard.AbsenceStatus", b =>
                {
                    b.HasOne("EcreoLibraryStandard.User", "User")
                        .WithMany()
                        .HasForeignKey("UserBaseID");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EcreoLibraryStandard.User", b =>
                {
                    b.HasOne("EcreoLibraryStandard.ContactInformation", "PersonalInformation")
                        .WithMany()
                        .HasForeignKey("PersonalInformationBaseID");

                    b.Navigation("PersonalInformation");
                });
#pragma warning restore 612, 618
        }
    }
}
